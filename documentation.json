{
    "pipes": [],
    "interfaces": [
        {
            "name": "PageChangeInfo",
            "id": "interface-PageChangeInfo-89f8ea4955e6c34eefddd194e0bc46654831f0e20e80d81e15f7055a64d9f3590a5871397b9b60c7e2103e0865f6e00cc6c770047561dc3d71aae1727294d4b4",
            "file": "src/app/model/page-change-info.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PageChangeInfo {\r\n\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  sortKey?: string;\r\n  sortDirection?: string;\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "pageIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sortDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "sortKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Task",
            "id": "interface-Task-0df1e1a3617cf2e7609f3ad30e0b6f0e04e0d555c738f3f9a55ddf9845482092987848aac1d291cdc7f9ebfe869688b921e9ef275c7493949de59d160b8ff8d5",
            "file": "src/app/model/task-info.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\r\n  id?: string | null\r\n  taskName?: string | null\r\n  taskPosition?: string | null\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "taskName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "taskPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "TaskInfo",
            "id": "interface-TaskInfo-831f89961b8dc664695463be9b0e2bc95b36971f65e1d6b1a42075928a62aa2a06f8dff077b0d0074a343b36a7815ef9f21ecaff555b2c80732621eb38fa1862",
            "file": "src/app/model/task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TaskInfo {\r\n  id?: string | null\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "TaskInfos",
            "id": "interface-TaskInfos-edacfbffd982bcf57c118b96cb881bfd0f13021f3b52b8b5de5bf9364827b04e78c51d7f7cc7272853ff085b7f360fc16b94dd79bf0f4c2bb4d9b13de083824b",
            "file": "src/app/model/tasks.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TaskInfo } from \"./task.model\";\r\n\r\n\r\nexport interface TaskInfos {\r\n  content: TaskInfo[];\r\n  totalElements: number;\r\n  size: number;\r\n\r\n}\r\n\r\n\r\n\r\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TaskInfo[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "totalElements",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c64b79c6bdb85504ba34c7c47263556405c88edb4bd2d379cd8b7d59e18252223837d4672412300f2e1a6a0a5153eafd8a45cba8fa0a01b817a5fd2b9a4f5859",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'story-book-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'story-book-app';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"m-8\" >\n  <router-outlet></router-outlet>\n</div>\n\n\n"
        },
        {
            "name": "TaskEditComponent",
            "id": "component-TaskEditComponent-f3f4132ee44fdfe01a5116acafcaba4978d03750918d8c3acbda47b16544c578e090f7c114777a736ea7a1c60bb1532631ba32564e4f26dfb10c31e86f931cd5",
            "file": "src/app/task-edit/task-edit.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-edit",
            "styleUrls": [
                "./task-edit.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task-edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "createOutput",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "taskForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "initForCreate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Task } from '../model/task-info.model';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaskEditComponent implements OnChanges, OnInit {\n\n  taskForm!: FormGroup;\n\n  @Output() createOutput = new EventEmitter<any>();\n\n\n  constructor(private fb: FormBuilder,\n     private readonly location: Location) {}\n\n  ngOnInit(): void {\n    this.initForCreate();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {}\n\n  initForCreate() {\n    this.taskForm = this.fb.group({\n      taskName: ['', Validators.required],\n      taskPosition: ['', Validators.required],\n    });\n  }\n\n  onBack() {\n    this.location.back();\n  }\n\n  save() {\n    // const taskInfo: Task = { ...this.taskForm.value };\n    console.log(this.taskForm.value)\n    this.createOutput.emit(this.taskForm.value);\n  }\n\n  get taskName() {\n    return this.taskForm.controls['taskName'];\n  }\n  get taskPosition() {\n    return this.taskForm.controls['taskPosition'];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task-edit.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "accessors": {
                "taskName": {
                    "name": "taskName",
                    "getSignature": {
                        "name": "taskName",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                },
                "taskPosition": {
                    "name": "taskPosition",
                    "getSignature": {
                        "name": "taskPosition",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                }
            },
            "templateData": "<div class=\"flex flex-col p-8\">\n  <div class=\"bg-white space-y-3 rounded-lg  bg-no-repeat bg-top\">\n    <ng-container [formGroup]=\"taskForm\">\n      <div class=\"m-6\">\n        <div class=\"flex flex-col\">\n          <p class=\"text-lg font-medium\">Task Name</p>\n          <mat-form-field appearance=\"outline\" class=\"max-w-[100%]\">\n            <input aria-label=\"task_name\" matInput type=\"text\" placeholder=\"Enter Task Name\"\n              formControlName=\"taskName\" />\n            <mat-error *ngIf=\"taskName.errors?.['required']\">\n              Task Name is mandatory.</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"flex flex-col\">\n          <p class=\"text-lg font-medium\">Position</p>\n          <mat-form-field appearance=\"outline\" class=\"max-w-[100%]\">\n            <input aria-label=\"task_position\" matInput type=\"number\" placeholder=\"Enter Position\"\n              formControlName=\"taskPosition\" />\n            <mat-error *ngIf=\"taskPosition.errors?.['required']\">\n              Task Position is mandatory.</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"flex justify-end space-x-4\">\n          <button mat-raised-button color=\"primary\" [disabled]=\"!taskForm.valid || !taskForm.dirty\" type=\"submit\"\n            (click)=\"save()\">Save</button>\n          <button mat-raised-button color=\"warn\" (click)=\"onBack()\">Cancel</button>\n\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "TaskEditShellComponent",
            "id": "component-TaskEditShellComponent-55be5cdf77ef5e0dd03c039cbceaaa250714d5657fabe1abe0e54969f1fdddb6cd62b14cbca8b4a409714ca8aafc98aba36f144307ee0fc777ad82727aeb6865",
            "file": "src/app/task-edit-shell/task-edit-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-edit-shell",
            "styleUrls": [
                "./task-edit-shell.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task-edit-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "createTask",
                    "args": [
                        {
                            "name": "task",
                            "type": "Task",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "task",
                            "type": "Task",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Task } from '../model/task-info.model';\n\n@Component({\n  selector: 'app-task-edit-shell',\n  templateUrl: './task-edit-shell.component.html',\n  styleUrls: ['./task-edit-shell.component.css']\n})\nexport class TaskEditShellComponent implements OnInit {\n\n\n  constructor (\n\n  ) {}\n\n  ngOnInit (): void {\n\n  }\n\n\n  createTask (task: Task) {\n\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task-edit-shell.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-task-edit\n  (create)=\"createTask($any($event))\">\n</app-task-edit>\n\n"
        },
        {
            "name": "TaskListComponent",
            "id": "component-TaskListComponent-a90274516cb7a87a14daabf121ecc06409560d9f3d6b16cd0ad3bd8bcbf1970a6e0def31d89332b06f58f788c15978ea5556d3bca00bd7eb8de311801908ca74",
            "file": "src/app/task-list/task-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-list",
            "styleUrls": [
                "./task-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "taskList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "TaskInfo[] | null",
                    "decorators": []
                },
                {
                    "name": "totalElements",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreate",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageChanged",
                    "defaultValue": "new EventEmitter<PageChangeInfo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "view",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "sub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskInfo } from '../model/task.model';\nimport { PageChangeInfo } from '../model/page-change-info.model';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Subscription, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() taskList!: TaskInfo[] | null;\n  @Input() pageSize!: number | null;\n  @Input() totalElements!: number | null;\n  @Input() errorMessage!: string | null;\n\n  @Output() pageChanged = new EventEmitter<PageChangeInfo>();\n  @Output() onCreate = new EventEmitter<void>();\n  @Output() view = new EventEmitter<string>();\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  sub!: Subscription;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(this.taskList)\n  }\n\n  ngAfterViewInit(): void {\n\n    this.sub = this.paginator.page.pipe(\n      tap(() =>\n\n        this.pageChanged.emit({\n          pageIndex: this.paginator.pageIndex,\n          pageSize: this.paginator.pageSize\n        } as PageChangeInfo)\n\n      )\n    ).subscribe();\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) this.sub.unsubscribe();\n\n  }\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n\n  create(): void {\n    this.onCreate.emit()\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "OnChanges",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"m-8\">\n  <div class=\"flex justify-between\">\n    <h2 class=\"font-semibold text-white\">Task List</h2>\n    <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\n  </div>\n\n  <div class=\"my-4\">\n    <table mat-table [dataSource]=\"taskList ?? []\" class=\"mat-elevation-z8 pb-8\">\n\n      <!-- Position Column -->\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <!-- Weight Column -->\n      <ng-container matColumnDef=\"weight\">\n        <th mat-header-cell *matHeaderCellDef> Weight </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n      </ng-container>\n\n      <!-- Symbol Column -->\n      <ng-container matColumnDef=\"symbol\">\n        <th mat-header-cell *matHeaderCellDef> Symbol </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n    <mat-paginator [length]=\"totalElements\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[5, 10, 100]\" showFirstLastButtons>\n    </mat-paginator>\n\n  </div>\n\n</div>\n"
        },
        {
            "name": "TaskListShellComponent",
            "id": "component-TaskListShellComponent-a74ab4267ba8e646c72e0623e57aa52469369c5c5b364a322047d015c5667c8b915897c7af14d89549826fe714916f59cfd8f1226b43d7262f4290637e7a0b56",
            "file": "src/app/task-list-shell/task-list-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task-list-shell",
            "styleUrls": [
                "./task-list-shell.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./task-list-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "errorMessage$",
                    "defaultValue": "this.errorMessageSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "errorMessageSubject",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "pageSize$",
                    "defaultValue": "this.pageSizeSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "pageSizeSubject",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "taskInfoList$",
                    "defaultValue": "this.taskListSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TaskInfo[]>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "taskListSubject",
                    "defaultValue": "new BehaviorSubject<TaskInfo[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "totalElements",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "totalElements$",
                    "defaultValue": "this.totalElementsSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "totalElementsSubject",
                    "defaultValue": "new BehaviorSubject<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createBtnOwnAcListWithSerial",
                    "args": [
                        {
                            "name": "content",
                            "type": "TaskInfo[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "TaskInfo[]",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "TaskInfo[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createTask",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTask",
                    "args": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pageSize",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageSize",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPageChanged",
                    "args": [
                        {
                            "name": "pageChangeInfo",
                            "type": "PageChangeInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageChangeInfo",
                            "type": "PageChangeInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "viewTask",
                    "args": [
                        {
                            "name": "currentFundTransferId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentFundTransferId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TaskInfo } from '../model/task.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PageChangeInfo } from '../model/page-change-info.model';\n\n@Component({\n  selector: 'app-task-list-shell',\n  templateUrl: './task-list-shell.component.html',\n  styleUrls: ['./task-list-shell.component.css']\n})\nexport class TaskListShellComponent implements OnInit {\n\n  private taskListSubject = new BehaviorSubject<TaskInfo[]>([]);\n  private pageSizeSubject = new BehaviorSubject<number>(0);\n  private totalElementsSubject = new BehaviorSubject<number>(0);\n  private errorMessageSubject = new BehaviorSubject<string>('');\n\n  taskInfoList$: Observable<TaskInfo[]> = this.taskListSubject.asObservable();\n  pageSize$: Observable<number> = this.pageSizeSubject.asObservable();\n  totalElements$: Observable<number> = this.totalElementsSubject.asObservable();\n  errorMessage$: Observable<string> = this.errorMessageSubject.asObservable();\n  pageSize = 10;\n  totalElements: number = 0;\n  errorMessage = '';\n  searchText!:string;\n\n\n  constructor(\n     private readonly router: Router,\n     private readonly route: ActivatedRoute\n    ) {\n\n\n  }\n\n  ngOnInit(): void {\n    // this.gettask(0, 10);\n\n  }\n\n  createBtnOwnAcListWithSerial(content: TaskInfo[]): TaskInfo[] {\n    let i = 0;\n    return content.map(btnOwnAcList => {\n      i++;\n      return ({\n        ...btnOwnAcList,\n        serialNo: i\n      } as TaskInfo)\n    });\n  }\n\n  getTask(pageIndex: number, pageSize: number) {\n\n\n\n  }\n\n  onPageChanged(pageChangeInfo: PageChangeInfo): void {\n\n  }\n\n\n\n  createTask(): void {\n    this.router.navigate(['task', '0', 'edit'], { relativeTo: this.route.parent });\n  }\n\n  viewTask(currentFundTransferId: string): void {\n    console.log(`updateBetweenOwnAccountFundTransfer: ${currentFundTransferId}`)\n  }\n\n\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./task-list-shell.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-task-list\n[taskList]=\"taskInfoList$ | async\"\n[pageSize]=\"pageSize\"\n[totalElements]=\"totalElements\"\n[errorMessage]=\"errorMessage\"\n(pageChanged)=\"onPageChanged($any($event))\"\n(onCreate)=\"createTask()\"\n(view)=\"viewTask($any($event))\"\n\n>\n\n</app-task-list>\n\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-737fd3a4ecf65ba6fdd1a0e5c2898423779205b4b6a4cdfea35360e7ae2fb492f79d1da099c0a732e83e1c3fd6b1b7c9bbfb78e0db0a0463cce7117e58811aaf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskListShellComponent } from './task-list-shell/task-list-shell.component';\nimport { TaskEditComponent } from './task-edit/task-edit.component';\nimport { TaskEditShellComponent } from './task-edit-shell/task-edit-shell.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    TaskListShellComponent,\n    TaskEditComponent,\n    TaskEditShellComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TaskEditComponent"
                        },
                        {
                            "name": "TaskEditShellComponent"
                        },
                        {
                            "name": "TaskListComponent"
                        },
                        {
                            "name": "TaskListShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-6aa83454f3b3e4be8615f70db6b878c93b7b77c827e945dd4343729b98874a9c1e99dd508950127b05cc03aa972a0c0f620077d06e789e179969b5c0c0feab97",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TaskListShellComponent } from './task-list-shell/task-list-shell.component';\nimport { TaskEditShellComponent } from './task-edit-shell/task-edit-shell.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'task',\n    pathMatch: 'full'\n  },\n  {\n    path: 'task',\n    component: TaskListShellComponent\n\n  },\n\n  {\n    path: 'task/:id/edit',\n    component: TaskEditShellComponent\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task-edit/task-edit.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  createOutput: action('createOutput'),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task-edit/task-edit.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskEditComponent>",
                "defaultValue": "{\r\n  component: TaskEditComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatButtonModule\r\n      ],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<!doctype html><html lang=\"en\">\r\n    <head><link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></head>\r\n    <body class=\"bg-teal-500 \">${story}</body>\r\n    </html>`\r\n    ),\r\n  ],\r\n  render: (args: TaskEditComponent) => ({\r\n    props: {\r\n      ...args,\r\n      createOutput: actionsData.createOutput,\r\n\r\n\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "TaskEditPageStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task-edit/task-edit.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  agrs: {},\r\n\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskEditComponent>",
                "file": "src/app/task-edit/task-edit.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/task-edit/task-edit.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task-edit/task-edit.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  createOutput: action('createOutput'),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task-edit/task-edit.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskEditComponent>",
                    "defaultValue": "{\r\n  component: TaskEditComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatButtonModule\r\n      ],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<!doctype html><html lang=\"en\">\r\n    <head><link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"></head>\r\n    <body class=\"bg-teal-500 \">${story}</body>\r\n    </html>`\r\n    ),\r\n  ],\r\n  render: (args: TaskEditComponent) => ({\r\n    props: {\r\n      ...args,\r\n      createOutput: actionsData.createOutput,\r\n\r\n\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "TaskEditPageStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task-edit/task-edit.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  agrs: {},\r\n\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/task-edit/task-edit.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskEditComponent>",
                    "file": "src/app/task-edit/task-edit.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "task",
                        "pathMatch": "full"
                    },
                    {
                        "path": "task",
                        "component": "TaskListShellComponent"
                    },
                    {
                        "path": "task/:id/edit",
                        "component": "TaskEditShellComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/model/page-change-info.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageChangeInfo",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/model/task-info.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/model/task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TaskInfo",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/model/tasks.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TaskInfos",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/task-edit-shell/task-edit-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskEditShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/task-edit/task-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/task-edit/task-edit.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task-edit/task-edit.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task-edit/task-edit.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TaskEditPageStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task-list-shell/task-list-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskListShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/task-list/task-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            }
        ]
    }
}